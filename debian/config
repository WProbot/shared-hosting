#!/bin/sh

# Load the `debconf` library functions
. /usr/share/debconf/confmodule

# Ensure that the user provides a valid e-mail address
EMAIL="$(jq -r .email /usr/share/shared-hosting/config.json 2> /dev/null)"
while [ "$1" = "reconfigure" ] || [ -z "$EMAIL" ]; do
  if [ "$1" = "reconfigure" ]; then
    db_subst shared-hosting/email skippable \
      "Press enter to keep the current value."
  fi
  db_input high shared-hosting/email || true
  db_go
  db_get shared-hosting/email
  # Skip the verification process if no changes were made
  if [ -n "$EMAIL" ] && [ "$RET" = "$EMAIL" ]; then break; fi
  # Backup any existing accounts directory
  if [ -e /etc/letsencrypt/accounts ]; then
    mv /etc/letsencrypt/accounts /etc/letsencrypt/accounts."$(date +%s)"
  fi; mkdir -p /etc/letsencrypt/accounts
  certbot register --non-interactive --agree-tos -m "$RET" 2> /dev/null && break
  sleep 1
done

MY_PWD="$(jq -r .password /usr/share/shared-hosting/config.json 2> /dev/null)"
while [ "$1" = "reconfigure" ] || [ -z "$MY_PWD" ]; do
  if [ "$1" = "reconfigure" ]; then
    db_subst shared-hosting/mysql-password skippable \
      "Press enter to keep the current value."
  fi
  db_input high shared-hosting/mysql-password || true
  db_go
  db_get shared-hosting/mysql-password
  if [ -n "$RET" ]; then
    mysql -u root -p"$RET" -e 'QUIT' 2> /dev/null && break
  fi; sleep 1
done

WEB_GROUP="$(cat /usr/share/shared-hosting/force-group 2> /dev/null | \
  awk '{print $1}')"
while [ "$1" = "reconfigure" ] || [ -z "$WEB_GROUP" ]; do
  if [ "$1" = "reconfigure" ]; then
    db_subst shared-hosting/force-group skippable \
      "Press enter to keep the current value."
  fi
  db_input high shared-hosting/force-group || true
  db_go
  db_get shared-hosting/force-group
  # Skip the verification process of no changes were made
  if [ -n "$WEB_GROUP" ] && [ "$RET" = "$WEB_GROUP" ]; then break; fi
  getent group "$RET" 2> /dev/null && break
  sleep 1
done
